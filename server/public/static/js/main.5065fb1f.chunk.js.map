{"version":3,"sources":["euros.svg","safe.svg","services/auth.services.js","components/auth/SignUp.js","components/auth/Login.js","components/NavBar.js","services/task.services.js","components/TaskCard.js","components/Map.js","components/TasksList.js","components/OfferCard.js","components/OffersList.js","components/OffersListModal.js","components/MyTaskCard.js","components/LoggedInNavBar.js","components/MyTaskList.js","components/MyOpenTasksList.js","components/MyAssignedTasksList.js","components/AssignedTaskerCard.js","components/AssignedTaskerList.js","components/OfferForm.js","components/OfferFormModal.js","components/TaskDetail.js","components/TaskAssignedCard.js","components/TaskAsignedList.js","components/TaskForm.js","components/Profile.js","components/Home.js","components/OfferDetails.js","App.js","serviceWorker.js","index.js","location-pin.svg","calendar.svg","left-arrow.svg"],"names":["module","exports","Services","signup","username","password","imageUrl","service","post","login","logout","loggedin","get","handleUpload","theFile","this","axios","create","baseURL","process","withCredentials","Signup","props","handleFileUpload","e","setState","state","file","target","files","handleInputChange","name","value","handleFormSubmit","preventDefault","uploadData","FormData","append","authServices","then","response","data","secure_url","x","console","log","theNewUser","setUser","history","push","catch","err","AuthServices","className","onSubmit","id","type","onChange","Component","Login","theLoggedUser","NavBar","saludo","userInSession","bg","Brand","href","style","width","Link","onClick","Text","getTasks","getMyTasks","getOneTask","getAssignedTasks","postTask","theNewTask","postOffer","theNewOffer","getOffers","taskId","deleteOffer","bidderId","getOneOffer","TaskCard","title","status","budget","_id","place","date","creatorname","creatorimage","to","textDecoration","border","height","borderRadius","Body","sm","Title","fontSize","src","require","address","slice","Footer","MapContainer","componentDidMount","navigator","geolocation","getCurrentPosition","position","center","lat","coords","latitude","lng","longitude","displayMarkers","tasks","map","task","index","key","stores","onPlaceSelected","parseFloat","geometry","location","formatted_address","currentSearch","types","componentRestrictions","country","google","zoom","mapStyles","initialCenter","options","GoogleMapsStyle","GoogleApiWrapper","apiKey","TasksList","updateList","services","handleModalOpen","showModal","handleModalClose","handleToastOpen","showToast","handleToastClose","data-spy","creator","imgUrl","OfferCard","bidderusername","description","OffersList","offers","offer","OffersListModal","size","aria-labelledby","Header","closeButton","user","taskid","MyTaskCard","toogleModal","changed","smClose","variant","block","show","onHide","assignedto","LoggedInNavBar","Toggle","aria-controls","Item","updateMyList","length","btn","btn-dark","md","span","offset","MyOpenTasksList","filter","MyAssignedTasksList","AssignedTaskerCard","AssignedTaskerList","OfferForm","handleChangeInput","updateOfferList","redirectToTarget","pathname","taskowner","bidderid","htmlFor","OfferFormModal","TaskDetail","smShow","match","params","TaskAssignedCard","offerinfo","TasksAssignedList","TaskForm","redirectToMyTasks","updateTaskList","borderbottom","Profile","created_at","Home","OfferDetails","redirectToTaskOffers","handleOfferClick","bidder","App","setTheUser","loggedInUser","fetchUser","display","path","exact","component","render","MyTaskList","Boolean","window","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5065fb1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/euros.ff9a19de.svg\";","module.exports = __webpack_public_path__ + \"static/media/safe.5c764d70.svg\";","import axios from 'axios'\n\nexport default class Services {\n\tconstructor() {\n\t\tthis.service = axios.create({\n\t\t\t// baseURL: 'http://localhost:5000/api/',\n\t\t\tbaseURL: `${process.env.REACT_APP_URL}`,\n\t\t\twithCredentials: true\n\t\t})\n\t}\n\n\tsignup = (username, password, imageUrl) => this.service.post('signup', { username, password, imageUrl })\n\tlogin = (username, password) => this.service.post('login', { username, password })\n\tlogout = () => this.service.post('logout')\n\tloggedin = () => this.service.get('loggedin')\n\thandleUpload = theFile => this.service.post('/upload', theFile)\n}\n","import React, { Component } from 'react'\nimport AuthServices from '../../services/auth.services'\n\nclass Signup extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\timageUrl: ''\n\t\t}\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\t//Cambia la imagen en el state dinamicamente\n\thandleFileUpload = e => {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tfile: e.target.files[0]\n\t\t})\n\t}\n\n\thandleInputChange = e => {\n\t\tconst { name, value, imageUrl } = e.target\n\t\tthis.setState({ [name]: value })\n\t}\n\n\thandleFormSubmit = e => {\n\t\te.preventDefault()\n\t\tconst { username, password, imageUrl } = this.state\n\n\t\t//Subida de imagen\n\t\tconst uploadData = new FormData()\n\n\t\tuploadData.append('imageUrl', this.state.file)\n\n\t\tthis.authServices\n\t\t\t.handleUpload(uploadData)\n\t\t\t.then(response => {\n\t\t\t\tthis.setState({ imageUrl: response.data.secure_url })\n\t\t\t\treturn response.data.secure_url\n\t\t\t})\n\t\t\t.then(x => {\n\t\t\t\tconst imageUrl = x\n\t\t\t\tconsole.log(x)\n\t\t\t\t//Una vez subida la imagen enviamos el usuario al back y limpiamos el form y redireccionamos a index.\n\t\t\t\tthis.authServices.signup(username, password, imageUrl).then(theNewUser => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tusername: '',\n\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\timageUrl: ''\n\t\t\t\t\t})\n\t\t\t\t\tthis.props.setUser(theNewUser)\n\t\t\t\t\tthis.props.history.push('/')\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t\t//console.log(err.response.data.message))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<h1 className='loginTitle allFontFamily'>Join Us</h1>\n\t\t\t\t<form onSubmit={this.handleFormSubmit} className='allFontFamily loginForm'>\n\t\t\t\t\tUsername:{' '}\n\t\t\t\t\t<input id='loginInputs' name='username' type='text' value={this.state.username} onChange={this.handleInputChange} />{' '}\n\t\t\t\t\t<br />\n\t\t\t\t\tPassword:{' '}\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='loginInputs'\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\tImage: <input name='imageUrl' type='file' onChange={this.handleFileUpload} />\n\t\t\t\t\t<br />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<input type='submit' value='Join SmallTask' className='loginButton' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Signup\n","import React, { Component } from 'react'\nimport AuthServices from '../../services/auth.services'\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: ''\n\t\t}\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\thandleInputChange = e => {\n\t\tconst { name, value } = e.target\n\t\tthis.setState({ [name]: value })\n\t}\n\n\thandleFormSubmit = e => {\n\t\te.preventDefault()\n\t\tconst { username, password } = this.state\n\t\tthis.authServices\n\t\t\t.login(username, password)\n\t\t\t.then(theLoggedUser => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: ''\n\t\t\t\t})\n\t\t\t\tthis.props.setUser(theLoggedUser)\n\t\t\t\tthis.props.history.push('/')\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t\t//err => console.log(err.response.data.message))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<h1 className='loginTitle allFontFamily'>Log in</h1>\n\t\t\t\t<br />\n\t\t\t\t<form onSubmit={this.handleFormSubmit} className='allFontFamily loginForm'>\n\t\t\t\t\tUsername:{' '}\n\t\t\t\t\t<input id='loginInputs' name='username' type='text' value={this.state.username} onChange={this.handleInputChange} />\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\tPassword:{' '}\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='loginInputs'\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<input type='submit' value='Log in' className='loginButton' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport AuthServices from '../services/auth.services'\nimport style from 'bootstrap/dist/css/bootstrap.css'\n\nclass NavBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\t// toggleMenu = () => document.querySelector('.menu').classList.toggle('abierto')\n\n\tlogout = () => {\n\t\tthis.authServices\n\t\t\t.logout()\n\t\t\t.then(x => {\n\t\t\t\tthis.props.setUser(null)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\tconst saludo = this.props.userInSession ? this.props.userInSession.data.username : 'invitado'\n\n\t\tif (this.props.userInSession) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar className='navstyle' bg='transparent'>\n\t\t\t\t\t\t<Navbar.Brand href='/'>SmallTask</Navbar.Brand>\n\t\t\t\t\t\t<Nav className='justify-content-end' style={{ width: '100%' }}>\n\t\t\t\t\t\t\t<Nav.Link className='nav-item' href='/profile'>\n\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link className='nav-item' href='/tasks'>\n\t\t\t\t\t\t\t\tBrowse tasks\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link className='nav-item' href='/my-tasks'>\n\t\t\t\t\t\t\t\tMy tasks\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link className='nav-item' href='/postTask'>\n\t\t\t\t\t\t\t\tNew Task\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link className='nav-item' onClick={this.logout}>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</Nav.Link>\n\n\t\t\t\t\t\t\t<Navbar.Text className='nav-item-text'> {saludo}</Navbar.Text>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar className='navstyle' bg='transparent'>\n\t\t\t\t\t\t<Navbar.Brand href='/'>SmallTask</Navbar.Brand>\n\t\t\t\t\t\t<Nav className='justify-content-end' style={{ width: '100%' }}>\n\t\t\t\t\t\t\t<Nav.Link href='/signup'>Sign Up</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link href='/login'>Login</Nav.Link>\n\t\t\t\t\t\t\t{/* <Navbar.Text>Bienvenid@: {saludo}</Navbar.Text> */}\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\nexport default NavBar\n","import axios from 'axios'\n\nexport default class Services {\n\tconstructor() {\n\t\tthis.service = axios.create({\n\t\t\t// baseURL: 'http://localhost:5000/api/'\n\t\t\tbaseURL: `${process.env.REACT_APP_URL}`,\n\t\t\twithCredentials: true\n\t\t})\n\t}\n\n\tgetTasks = () => this.service.get('tasks')\n\tgetMyTasks = () => this.service.get('my-tasks')\n\tgetOneTask = id => this.service.get(`task/${id}`)\n\tgetAssignedTasks = () => this.service.get('assigned-tasks')\n\tpostTask = theNewTask => this.service.post(`postTask`, theNewTask)\n\tpostOffer = theNewOffer => this.service.post(`postOffer`, theNewOffer)\n\tgetOffers = taskId => this.service.get(`task-offers/${taskId}`)\n\tdeleteOffer = (taskId, bidderId) => this.service.post(`accept-offer`, { taskId, bidderId })\n\tgetOneOffer = id => this.service.get(`offer-details/${id}`)\n}\n","import React from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Image from 'react-bootstrap/Image'\nimport { Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\n\nconst TaskCard = ({ title, status, budget, _id, place, date, creatorname, creatorimage }) => {\n\tif (status === 'OPEN') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Link to={`/task/${_id}`} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Card border='success' style={{ width: '23rem', height: '19rem', borderRadius: 3 }} className='taskCardStyle'>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t\t\t<Card.Title className='taskCardInfo'>{title}</Card.Title>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col sm={3}>\n\t\t\t\t\t\t\t\t\t\t<Card.Text className='taskCardInfo' style={{ fontSize: '23px' }}>\n\t\t\t\t\t\t\t\t\t\t\t<b>{budget}€</b>\n\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t\t\t<Image className='cardImage' src={require('../location-pin.svg')}></Image>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'> {place.address}</Card.Text>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t\t\t<Image className='cardImage' src={require('../calendar.svg')}></Image>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'>{date.slice(0, 10)}</Card.Text>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t\t\t<Image src={creatorimage} style={{ width: '25px', height: '25px' }} className='imgCard' />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'>Posted by: {creatorname}</Card.Text>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t<Card.Footer className='taskCardInfo'>{status}</Card.Footer>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<br></br>\n\t\t\t\t</Link>\n\t\t\t</>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Container>\n\t\t\t\t\t<Card border='dark' style={{ width: '23rem', height: '19rem' }} className='taskCardStyle'>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t\t<Card.Title className='taskCardInfo'>{title}</Card.Title>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={3}>\n\t\t\t\t\t\t\t\t\t<Card.Text style={{ fontSize: '23px' }} className='taskCardInfo'>\n\t\t\t\t\t\t\t\t\t\t<b>{budget}€</b>\n\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t\t<Image className='cardImage' src={require('../location-pin.svg')}></Image>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'> {place.address}</Card.Text>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t\t<Image className='cardImage' src={require('../calendar.svg')}></Image>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'>{date.slice(0, 10)}</Card.Text>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t\t<Image src={creatorimage} style={{ width: '25px', height: '25px' }} className='imgCard' />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'>Posted by: {creatorname}</Card.Text>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t<Card.Footer className='taskCardInfo'>{status}</Card.Footer>\n\t\t\t\t\t</Card>\n\t\t\t\t</Container>\n\t\t\t\t<br></br>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default TaskCard\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\nimport GoogleMapReact from 'google-maps-react'\nimport Autocomplete from 'react-google-autocomplete'\nimport GoogleMapsStyle from './GoogleMapsStyle.json'\n\nclass MapContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tstores: [\n\t\t\t\t{ lat: 40.3922718, lng: -3.6985561999999996 }\n\t\t\t\t// { lat: 47.359423, lng: -122.021071 },\n\t\t\t\t// { lat: 47.2052192687988, lng: -121.988426208496 },\n\t\t\t\t// { lat: 47.6307081, lng: -122.1434325 },\n\t\t\t\t// { lat: 47.3084488, lng: -122.2140121 },\n\t\t\t\t// { lat: 47.5524695, lng: -122.0425407 }\n\t\t\t]\n\t\t}\n\t}\n\n\tcomponentDidMount = () => {\n\t\t//findAll y markers.\n\t\t// set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\n\n\t\t// Enable or disable logs. Its optional.\n\n\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\tthis.setState({ center: { lat: position.coords.latitude, lng: position.coords.longitude } })\n\t\t})\n\t}\n\n\tdisplayMarkers = tasks => {\n\t\treturn tasks.map((task, index) => {\n\t\t\tconsole.log(task)\n\t\t\treturn (\n\t\t\t\t<Marker\n\t\t\t\t\tkey={index}\n\t\t\t\t\tid={index}\n\t\t\t\t\tposition={{\n\t\t\t\t\t\tlat: task.place.latitude,\n\t\t\t\t\t\tlng: task.place.longitude\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => console.log('You clicked me!')}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\n\trender() {\n\t\treturn this.state.center ? (\n\t\t\t<>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tstyle={{ width: '500px' }}\n\t\t\t\t\tonPlaceSelected={place => {\n\t\t\t\t\t\tconsole.log(parseFloat(place.geometry.location.lat()))\n\t\t\t\t\t\tconsole.log(place.formatted_address)\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcurrentSearch: {\n\t\t\t\t\t\t\t\tlat: parseFloat(place.geometry.location.lat()),\n\t\t\t\t\t\t\t\tlng: parseFloat(place.geometry.location.lng())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\ttypes={['address']}\n\t\t\t\t\tcomponentRestrictions={{ country: 'es' }}\n\t\t\t\t/>\n\t\t\t\t<GoogleMapReact\n\t\t\t\t\tgoogle={this.props.google}\n\t\t\t\t\tzoom={8}\n\t\t\t\t\tstyle={mapStyles}\n\t\t\t\t\tinitialCenter={this.state.center}\n\t\t\t\t\toptions={{ GoogleMapsStyle }}\n\t\t\t\t>\n\t\t\t\t\t{this.displayMarkers(this.props.tasks)}\n\t\t\t\t</GoogleMapReact>\n\t\t\t</>\n\t\t) : (\n\t\t\t<p>Waiting for location...</p>\n\t\t)\n\t}\n}\n\nconst mapStyles = {\n\twidth: '500px',\n\theight: '500px'\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: `${process.env.REACT_APP_APPKEY}`\n\t//'AIzaSyDOuDALvzBrOz-Y-iQxy8lPZKvl8yw9ZX4'\n})(MapContainer)\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport TaskCard from './TaskCard'\nimport GoogleApiWrapper from './Map'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\n\nclass TasksList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateList()\n\n\tupdateList = () => {\n\t\tthis.services\n\t\t\t.getTasks()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\thandleModalOpen = () => this.setState({ showModal: true })\n\thandleModalClose = () => this.setState({ showModal: false })\n\thandleToastOpen = () => this.setState({ showToast: true })\n\thandleToastClose = () => this.setState({ showToast: false })\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div data-spy='scroll'>\n\t\t\t\t\t\t\t<Col sm={5}>\n\t\t\t\t\t\t\t\t{this.props.userInSession}\n\n\t\t\t\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t\t\t\t<TaskCard creatorname={task.creator.username} creatorimage={task.creator.imgUrl} key={task._id} {...task} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* <div className='row task-list'>\n\t\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t\t<TaskCard key={task._id} {...task} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<GoogleApiWrapper tasks={this.state.tasks} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default TasksList\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\n\nconst OfferCard = ({ bidderusername, description, budget, _id }) => {\n\tconsole.log(_id)\n\treturn (\n\t\t<div className='col-md-10'>\n\t\t\t<article className='task-card'>\n\t\t\t\t<p className='allFontFamily'>Posted by: {bidderusername}</p>\n\t\t\t\t<p className='allFontFamily'>Details: {description}</p>\n\t\t\t\t<p className='allFontFamily'>Offer: {budget}</p>\n\n\t\t\t\t<Link className='linklinkStyle' to={`/offer-details/${_id}`}>\n\t\t\t\t\tSee offer\n\t\t\t\t</Link>\n\n\t\t\t\t<hr />\n\t\t\t</article>\n\t\t</div>\n\t)\n}\n\nexport default OfferCard\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\n\nimport OfferCard from './OfferCard'\n\nclass OffersList extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { offers: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateList()\n\n\tupdateList = () => {\n\t\tthis.services\n\t\t\t.getOffers(this.props.taskId)\n\t\t\t.then(response => {\n\t\t\t\tthis.setState({ offers: response.data })\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<div className='row task-list'>\n\t\t\t\t\t\t\t{this.state.offers.map(offer => (\n\t\t\t\t\t\t\t\t<OfferCard key={offer._id} {...offer} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t{/* {this.props.userInSession.username} */}\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default OffersList\n","import React, { Component } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport OffersList from './OffersList'\nclass OffersListModal extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Modal {...this.props} size='small' aria-labelledby='example-modal-sizes-title-sm'>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title className='allFontFamily' id='example-modal-sizes-title-sm'>\n\t\t\t\t\t\tTaskers offers\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t:￼\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<OffersList userInSession={this.props.user} taskId={this.props.taskid} />\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\nexport default OffersListModal\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Services from '../services/task.services'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Image from 'react-bootstrap/Image'\nimport OffersListModal from './OffersListModal'\n\nclass MyTaskCard extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { showModal: false }\n\t\tthis.service = new Services()\n\t}\n\t// componentDidMount() {\n\t// \tthis.servicesmShow\n\t// \t\t.getOneTask(this.props.key)\n\t// \t\t.then(response => this.setState({ task: response.data }))\n\t// \t\t.catch(err => console.log('err', err))\n\t// }\n\ttoogleModal = () => {\n\t\tconst changed = !this.state.showModal\n\t\tthis.setState({ showModal: changed })\n\t}\n\n\trender() {\n\t\tlet smClose = () => this.setState({ showModal: false })\n\t\tif (this.props.status === 'OPEN') {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tid='mycardstyle'\n\t\t\t\t\t\tclassName='taskCardInfo'\n\t\t\t\t\t\tborder='success'\n\t\t\t\t\t\tstyle={{ width: '23rem', height: '19rem', borderRadius: 3 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Card.Body className='taskCardInfo'>\n\t\t\t\t\t\t\t<Card.Title>{this.props.title}</Card.Title>\n\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'>Details: {this.props.description}</Card.Text>\n\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'>Date: {this.props.date.slice(0, 10)}</Card.Text>\n\t\t\t\t\t\t\t<Card.Text className='taskCardInfo'>Budget: {this.props.budget}€</Card.Text>\n\t\t\t\t\t\t\t<Button onClick={() => this.setState({ showModal: true })} variant='dark' size='sm' block>\n\t\t\t\t\t\t\t\tSee Offers\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t<Card.Footer>{this.props.status}</Card.Footer>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<OffersListModal user={this.props.user} show={this.state.showModal} onHide={smClose} taskid={this.props._id} />\n\t\t\t\t\t<br></br>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Card id='mycardstyle' className='taskCardInfo' border='dark' style={{ width: '23rem', borderRadius: 3 }}>\n\t\t\t\t\t\t<Card.Header className='taskCardInfo'>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<b>{this.props.status}</b>\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t<Card.Body className='taskCardInfo'>\n\t\t\t\t\t\t\t<Card.Text className='assignedBudget text-center taskCardInfo'>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<b>{this.props.budget}</b>{' '}\n\t\t\t\t\t\t\t\t<Image src={require('../euros.svg')} style={{ width: '30px', height: '30px' }} className='cardImage' />\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Card.Text className='text-center taskCardInfo'>\n\t\t\t\t\t\t\t\t<b>Details:</b> {this.props.title}\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Card.Text className='text-center taskCardInfo'>\n\t\t\t\t\t\t\t\t<b>Task assigned to:</b> {this.props.assignedto}\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Button variant='dark' size='sm' block>\n\t\t\t\t\t\t\t\tSend a message to tasker\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<OffersListModal taskid={this.props._id} user={this.props.user} show={this.state.showModal} onHide={smClose} />\n\t\t\t\t\t<br></br>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n\t// const MyTaskCard = ({ title, description, budget, _id, date, status }) => {\n\t// \tif (status === 'OPEN') {\n\t// \t\treturn (\n\t// \t\t\t<>\n\t// \t\t\t\t<Card border='success' style={{ width: '21rem', borderRadius: 3 }} className='taskCardStyle'>\n\t// \t\t\t\t\t<Card.Body>\n\t// \t\t\t\t\t\t<Card.Title>\n\t// \t\t\t\t\t\t\t<b>{title}</b>\n\t// \t\t\t\t\t\t</Card.Title>\n\t// \t\t\t\t\t\t<Card.Text className='taskCardInfo'>{description}</Card.Text>\n\t// \t\t\t\t\t\t<Card.Text className='taskCardInfo'>{date.slice(0, 10)}</Card.Text>\n\t// \t\t\t\t\t\t<Card.Text className='taskCardInfo'>{budget}</Card.Text>\n\t// \t\t\t\t\t\t<Link to={`/task-offers`}>\n\t// \t\t\t\t\t\t\t<Button variant='dark' size='sm' block>\n\t// \t\t\t\t\t\t\t\tSee Offers\n\t// \t\t\t\t\t\t\t</Button>\n\t// \t\t\t\t\t\t</Link>\n\t// \t\t\t\t\t</Card.Body>\n\t// \t\t\t\t\t<Card.Footer>{status}</Card.Footer>\n\t// \t\t\t\t</Card>\n\n\t// \t\t\t\t<OffersListModal taskid={_id} />\n\t// \t\t\t\t<br></br>\n\t// \t\t\t</>\n\t// \t\t)\n\t// \t} else {\n\t// \t\treturn (\n\t// \t\t\t<>\n\t// \t\t\t\t<Card border='dark' style={{ width: '21rem' }}>\n\t// \t\t\t\t\t<Card.Body>\n\t// \t\t\t\t\t\t<Card.Title>{title}</Card.Title>\n\n\t// \t\t\t\t\t\t<Link to={`/task-offers`}>\n\t// \t\t\t\t\t\t\t<Button variant='dark' size='sm' block>\n\t// \t\t\t\t\t\t\t\tSee Offers\n\t// \t\t\t\t\t\t\t</Button>\n\t// \t\t\t\t\t\t</Link>\n\t// \t\t\t\t\t</Card.Body>\n\t// \t\t\t\t\t<Card.Footer>{status}</Card.Footer>\n\t// \t\t\t\t</Card>\n\n\t// \t\t\t\t<br></br>\n\t// \t\t\t</>\n\t// \t\t)\n\t// \t}\n}\n\nexport default MyTaskCard\n","import React, { Component } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport AuthServices from '../services/auth.services'\nimport style from 'bootstrap/dist/css/bootstrap.css'\n\nclass LoggedInNavBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { tasks: [] }\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Navbar className='navstyle' bg='transparent'>\n\t\t\t\t\t<Nav className='navbarcolor'>\n\t\t\t\t\t\t<Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\t\t\t\t\t\t<NavDropdown className='navstyle' title='AS POSTER' id='basic-nav-dropdown'>\n\t\t\t\t\t\t\t<NavDropdown.Item href='/my-tasks'>ALL TASKS</NavDropdown.Item>\n\t\t\t\t\t\t\t<NavDropdown.Item href='/my-open-tasks'>POSTED TASKS</NavDropdown.Item>\n\t\t\t\t\t\t\t<NavDropdown.Item href='/my-assigned-tasks'>ASSIGNED TASKS</NavDropdown.Item>\n\t\t\t\t\t\t</NavDropdown>\n\n\t\t\t\t\t\t<NavDropdown className='navstyle' title='AS TASKER' id='basic-nav-dropdown'>\n\t\t\t\t\t\t\t<NavDropdown.Item href='/assigned-tasker'>OFFERS PENDING</NavDropdown.Item>\n\t\t\t\t\t\t\t<NavDropdown.Item href='/my-open-tasks'>TASKS COMPLETED</NavDropdown.Item>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar>\n\t\t\t</>\n\t\t\t// <>\n\t\t\t// \t<Navbar className='navstyle' bg='transparent'>\n\t\t\t// \t\t<Nav className='navbarcolor'>\n\t\t\t// \t\t\t<Nav.Link href='/my-tasks'>ALL TASKS</Nav.Link>\n\t\t\t// \t\t\t<Nav.Link href='/my-open-tasks'>POSTED TASKS</Nav.Link>\n\t\t\t// \t\t\t<Nav.Link href='/my-assigned-tasks'>ASSIGNED TASKS</Nav.Link>\n\t\t\t// \t\t</Nav>\n\t\t\t// \t</Navbar>\n\t\t\t// </>\n\t\t)\n\t}\n}\nexport default LoggedInNavBar\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport MyTaskCard from './MyTaskCard'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\n\nimport LoggedInNavBar from './LoggedInNavBar'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass TasksList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateMyList()\n\n\tupdateMyList = () => {\n\t\tthis.services\n\t\t\t.getMyTasks()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\tif (this.state.tasks.length === 0) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{/* <Row>\n\t\t\t\t\t\t\t<LoggedInNavBar />\n\t\t\t\t\t\t</Row> */}\n\t\t\t\t\t\t<Row-text-center>\n\t\t\t\t\t\t\t<h4 className='allFontFamily centeralign'>\n\t\t\t\t\t\t\t\tLooks like you haven’t posted a task.<br></br> How about posting one now?\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t</Row-text-center>\n\t\t\t\t\t\t<Button btn btn-dark id='botones' className='centerthebutton'>\n\t\t\t\t\t\t\t<Link id='linkss' to='/postTask'>\n\t\t\t\t\t\t\t\tPost a task\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Container>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{/* <Row>\n\t\t\t\t\t\t\t<LoggedInNavBar />\n\t\t\t\t\t\t</Row> */}\n\n\t\t\t\t\t\t<Row className='text-center'>\n\t\t\t\t\t\t\t<h4>All tasks posted by you</h4>\n\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col md={{ span: 6, offset: 3 }}>\n\t\t\t\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t\t\t\t<MyTaskCard key={task._id} {...task} user={this.props.user} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t</Container>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default TasksList\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport MyTaskCard from './MyTaskCard'\nimport { Link } from 'react-router-dom'\nimport LoggedInNavBar from './LoggedInNavBar'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass MyOpenTasksList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateMyList()\n\n\tupdateMyList = () => {\n\t\tthis.services\n\t\t\t.getMyTasks()\n\t\t\t.then(response => response.data.filter(task => task.status === 'OPEN'))\n\t\t\t.then(response => this.setState({ tasks: response }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\t// showPostedTasks = () => {\n\t// \tthis.services\n\t// \t\t.getMyTasks()\n\t// \t\t.then(response => response.data.filter(task => task.status === 'OPEN'))\n\t// \t\t.then(response => this.setState({ tasks: response }))\n\t// \t\t.catch(err => console.log(err))\n\t// }\n\n\t// showMyTasks = () => {\n\t// \tthis.updateMyList()\n\t// }\n\n\t// showAssignedTasks = () => {\n\t// \tthis.services\n\t// \t\t.getMyTasks()\n\t// \t\t.then(response => response.data.filter(task => task.status === 'ASSIGNED'))\n\t// \t\t.then(response => this.setState({ tasks: response }))\n\t// \t\t.catch(err => console.log(err))\n\t// }\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Container>\n\t\t\t\t\t{/* <Row>\n\t\t\t\t\t\t\t<LoggedInNavBar />\n\t\t\t\t\t\t</Row> */}\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<h4>Open tasks</h4>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={{ span: 6, offset: 3 }}>\n\t\t\t\t\t\t\t{this.state.tasks && this.state.tasks.map(task => <MyTaskCard key={task._id} {...task} />)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default MyOpenTasksList\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport MyTaskCard from './MyTaskCard'\nimport { Link } from 'react-router-dom'\nimport LoggedInNavBar from './LoggedInNavBar'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass MyAssignedTasksList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateMyList()\n\n\tupdateMyList = () => {\n\t\tthis.services\n\t\t\t.getMyTasks()\n\t\t\t.then(response => response.data.filter(task => task.status === 'ASSIGNED'))\n\t\t\t.then(response => this.setState({ tasks: response }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\tif (this.state.tasks.length === 0) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{/* <LoggedInNavBar /> */}\n\t\t\t\t\t<h3>Looks like you haven’t posted a task. How about posting one now?</h3>\n\t\t\t\t\t<Link to='/postTask'>Post a task</Link>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>{/* <LoggedInNavBar /> */}</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<h1>Assigned tasks</h1>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t\t\t<MyTaskCard key={task._id} {...task} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default MyAssignedTasksList\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Services from '../services/task.services'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Image from 'react-bootstrap/Image'\nimport OffersListModal from './OffersListModal'\n\nconst AssignedTaskerCard = ({ budget, title, creator }) => {\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<Card border='success' style={{ width: '23rem', borderRadius: 3 }} className='taskCardStyle'>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Title>{title}</Card.Title>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={{ span: 2, offset: 4 }}>\n\t\t\t\t\t\t\t\t<Image className='imagecandado' src={require('../safe.svg')} style={{ width: '20px', height: '20px' }} />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Card.Text className='taskCardInfo fuentecandado'>Funds Secured</Card.Text>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Card.Text className=' fuentefondos text-center taskCardInfo'>{budget}€</Card.Text>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t\t\t<Card.Text className='postedByCompleted'>Posted by: {creator.username}</Card.Text>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={2}>\n\t\t\t\t\t\t\t\t<Image src={creator.imgUrl} className='imgCard' style={{ width: '25px', height: '25px' }}></Image>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<Button variant='dark' size='sm' block>\n\t\t\t\t\t\t\tSend a message to task poster\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t\t{/* <Card.Footer>{this.props.status}</Card.Footer> */}\n\t\t\t\t</Card>\n\t\t\t</Container>\n\t\t</>\n\t)\n}\n\nexport default AssignedTaskerCard\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport AssignedTaskerCard from './AssignedTaskerCard'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass AssignedTaskerList extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateList()\n\n\tupdateList = () => {\n\t\tconsole.log(this.props.userInSession)\n\t\tthis.services\n\t\t\t.getAssignedTasks()\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response.data.filter(task => task.assignedto === this.props.userInSession.data.username))\n\t\t\t\treturn response.data.filter(task => task.assignedto === this.props.userInSession.data.username)\n\t\t\t})\n\t\t\t.then(response => this.setState({ tasks: response }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<h4>Tasks assigned to you</h4>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t{/* {this.props.userInSession.data.username} */}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={{ span: 6, offset: 3 }}>\n\t\t\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t\t\t<AssignedTaskerCard key={task._id} {...task} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t)\n\t}\n}\nexport default AssignedTaskerList\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Services from '../services/task.services'\n\nclass OfferForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttaskid: this.props.taskid,\n\t\t\ttaskowner: this.props.taskowner,\n\t\t\tbidderid: this.props.userInSession.data._id,\n\t\t\tbidderusername: this.props.userInSession.data.username,\n\t\t\tdescription: '',\n\t\t\tbudget: ''\n\t\t}\n\t\tthis.service = new Services()\n\t}\n\n\thandleChangeInput = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value })\n\t}\n\n\thandleFormSubmit = e => {\n\t\te.preventDefault()\n\t\tthis.service\n\t\t\t.postOffer(this.state)\n\t\t\t.then(x => {\n\t\t\t\tthis.props.updateOfferList()\n\t\t\t})\n\t\t\t.catch(err => console.log('error', err))\n\t}\n\n\tredirectToTarget = () => {\n\t\treturn <Redirect to={{ pathname: '/' }} />\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/* <h4>Make an offer</h4> */}\n\n\t\t\t\t<hr />\n\n\t\t\t\t<form onSubmit={this.handleFormSubmit}>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-nombre' className='allFontFamily'>\n\t\t\t\t\t\t\tYour offer:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='budget'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tclassName='form-control allFontFamily'\n\t\t\t\t\t\t\tid='input-budget'\n\t\t\t\t\t\t\tonChange={this.handleChangeInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-description' className='allFontFamily'>\n\t\t\t\t\t\t\tYour message:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tclassName='form-control allFontFamily'\n\t\t\t\t\t\t\tid='input-descripcion'\n\t\t\t\t\t\t\tonChange={this.handleChangeInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type='submit' className='btn btn-dark btn-sm allFontFamily' onClick={() => this.redirectToTarget()}>\n\t\t\t\t\t\tMake your offer\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default OfferForm\n","import React, { Component } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport OfferForm from './OfferForm'\n\n// handleFormSubmit = e => {\n// \te.preventDefault()\n// \tthis.service\n// \t\t.postCoaster(this.state)\n// \t\t.then(x => {\n// \t\t\tthis.props.closeModal()\n// \t\t\tthis.props.updateCoasterList()\n// \t\t})\n// \t\t.catch(err => console.log('error', err))\n// }\n\nclass OfferFormModal extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Modal {...this.props} size='small' aria-labelledby='example-modal-sizes-title-sm'>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title id='example-modal-sizes-title-sm' className='allFontFamily'>\n\t\t\t\t\t\tMake an offer\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<OfferForm\n\t\t\t\t\t\tsetUser={this.props.setUser}\n\t\t\t\t\t\tuserInSession={this.props.userInSession}\n\t\t\t\t\t\ttaskowner={this.props.taskowner}\n\t\t\t\t\t\ttaskid={this.props.taskid}\n\t\t\t\t\t/>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\nexport default OfferFormModal\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport Services from '../services/task.services'\nimport OfferFormModal from './OfferFormModal'\n\n// import OfferForm from './OfferForm'\n\nclass TaskDetail extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { task: {} }\n\t\tthis.service = new Services()\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.service\n\t\t\t.getOneTask(this.props.match.params.id)\n\t\t\t.then(response => this.setState({ task: response.data }))\n\t\t\t.catch(err => console.log('err', err))\n\t}\n\n\ttoogleModal = () => {\n\t\tconst changed = !this.state.showModal\n\t\tthis.setState({ showModal: changed })\n\t}\n\n\tsmClose = () => this.setState({ smShow: false })\n\trender() {\n\t\t// let lgClose = () => this.setState({ lgShow: false })\n\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<article>\n\t\t\t\t\t<div className='row justify-content-center'>\n\t\t\t\t\t\t<div className='col-md-6'>\n\t\t\t\t\t\t\t<Link to='/tasks'>\n\t\t\t\t\t\t\t\t<Image src={require('../left-arrow.svg')} style={{ width: 30 }} className='backArrowD'></Image>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<h3 className='allFontFamily'> {this.state.task.title} </h3>\n\t\t\t\t\t\t\t<p className='allFontFamily'>Details: {this.state.task.description}</p>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<p className='allFontFamily'>Posted by: {this.state.task.creator && this.state.task.creator.username}</p>\n\t\t\t\t\t\t\t<p className='allFontFamily'>Location: {this.state.task.place && this.state.task.place.address}</p>\n\t\t\t\t\t\t\t<p className='allFontFamily'>Task budget: {this.state.task.budget}</p>\n\n\t\t\t\t\t\t\t<p className='allFontFamily'> Due date: {this.state.task.date && this.state.task.date.slice(0, 10)}</p>\n\t\t\t\t\t\t\t<small className='allFontFamily'>Status: {this.state.task.status}</small>\n\n\t\t\t\t\t\t\t<Button onClick={() => this.setState({ smShow: true })} id='botonTaskForm' className='btn' size='sm' block>\n\t\t\t\t\t\t\t\tMake an offer\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{console.log(this.props.userInSession)}\n\t\t\t\t\t\t\t{this.state.task.creator && (\n\t\t\t\t\t\t\t\t<OfferFormModal\n\t\t\t\t\t\t\t\t\tshow={this.state.smShow}\n\t\t\t\t\t\t\t\t\tsmClose={this.smClose}\n\t\t\t\t\t\t\t\t\tsetUser={this.props.setUser}\n\t\t\t\t\t\t\t\t\tuserInSession={this.props.userInSession}\n\t\t\t\t\t\t\t\t\ttaskowner={this.state.task.creator.username}\n\t\t\t\t\t\t\t\t\ttaskid={this.state.task._id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TaskDetail\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\n\nconst TaskAssignedCard = ({ bidderusername, description, budget, _id, status, offerinfo }) => {\n\tconsole.log(_id)\n\treturn (\n\t\t<div className='col-md-3'>\n\t\t\t<article className='task-card'>\n\t\t\t\t<p>Posted by: {bidderusername}</p>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<p>TASK PRICE: {budget}</p>\n\n\t\t\t\t<Button>{status}</Button>\n\n\t\t\t\t<Link to={`/tasks`}>Back</Link>\n\n\t\t\t\t<hr />\n\t\t\t</article>\n\t\t</div>\n\t)\n}\n\nexport default TaskAssignedCard\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport TaskAssignedCard from './TaskAssignedCard'\n\nclass TasksAssignedList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateList()\n\n\tupdateList = () => {\n\t\tthis.services\n\t\t\t.getAssignedTasks()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\thandleModalOpen = () => this.setState({ showModal: true })\n\thandleModalClose = () => this.setState({ showModal: false })\n\thandleToastOpen = () => this.setState({ showToast: true })\n\thandleToastClose = () => this.setState({ showToast: false })\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1>Listado de tasks</h1>\n\n\t\t\t\t{this.props.userInSession}\n\n\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t<TaskAssignedCard key={task._id} {...task} />\n\t\t\t\t))}\n\n\t\t\t\t{/* <div className='row task-list'>\n\t\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t\t<TaskCard key={task._id} {...task} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div> */}\n\t\t\t</>\n\t\t)\n\t}\n}\nexport default TasksAssignedList\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\nimport Autocomplete from 'react-google-autocomplete'\nimport Services from '../services/task.services'\nimport Image from 'react-bootstrap/Image'\nimport { Link } from 'react-router-dom'\n\nclass TaskForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcreator: '',\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t\tbudget: '',\n\t\t\tdate: '',\n\t\t\tstatus: 'OPEN',\n\t\t\tlat: '',\n\t\t\tlng: ''\n\t\t}\n\t\tthis.service = new Services()\n\t}\n\n\thandleChangeInput = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value, creator: this.props.userInSession.data._id })\n\t\tconsole.log(this.props.userInSession)\n\t}\n\n\tredirectToMyTasks = () => {\n\t\tconst { history } = this.props\n\t\tif (history) history.push('/my-tasks')\n\t}\n\n\thandleFormSubmit = e => {\n\t\te.preventDefault()\n\t\tthis.service\n\t\t\t.postTask(this.state)\n\t\t\t.then(x => {\n\t\t\t\tthis.redirectToMyTasks()\n\t\t\t\tthis.props.updateTaskList()\n\t\t\t})\n\t\t\t.catch(err => console.log('error', err))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h4 className='formTitleStyle'>What do you need done?</h4>\n\n\t\t\t\t<hr style={{ width: '100%' }} />\n\t\t\t\t<Link to='/my-tasks'>\n\t\t\t\t\t<Image src={require('../left-arrow.svg')} style={{ width: 30 }} className='backArrow'></Image>\n\t\t\t\t</Link>\n\t\t\t\t<form onSubmit={this.handleFormSubmit} id='newTaskForm' className='taskCardStyle loginForm'>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-nombre'>Title of your task</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input name='title' type='text' className='newTaskInputs' id='input-nombre' onChange={this.handleChangeInput} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-description'>Details</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tclassName='newTaskInputs'\n\t\t\t\t\t\t\tid='input-descripcion'\n\t\t\t\t\t\t\tonChange={this.handleChangeInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-budget'>What is your budget?</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input name='budget' type='number' className='newTaskInputs' id='input-budget' onChange={this.handleChangeInput} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-inv'>When do you need it done?</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input name='date' type='date' className='newTaskInputs' id='input-date' onChange={this.handleChangeInput} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-img'>Where do you need it done?</label>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\tstyle={{ width: '350px', border: 0, borderbottom: 'solid' }}\n\t\t\t\t\t\t\tonPlaceSelected={place => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tplace: {\n\t\t\t\t\t\t\t\t\t\tlatitude: parseFloat(place.geometry.location.lat()),\n\t\t\t\t\t\t\t\t\t\tlongitude: parseFloat(place.geometry.location.lng()),\n\t\t\t\t\t\t\t\t\t\taddress: place.formatted_address\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttypes={['address']}\n\t\t\t\t\t\t\tcomponentRestrictions={{ country: 'es' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t{/* btn btn-dark btn-sm */}\n\t\t\t\t\t<button type='submit' id='botonTaskForm' className='btn'>\n\t\t\t\t\t\tPost a task\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{/* <button className='btn btn-dark btn-sm' onClick={this.redirectToMyTasks}>\n\t\t\t\t\t\tCerrar\n\t\t\t\t\t</button> */}\n\t\t\t\t</form>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: 'AIzaSyDOuDALvzBrOz-Y-iQxy8lPZKvl8yw9ZX4'\n})(TaskForm)\n","import React, { Component } from 'react'\nimport AuthServices from '../services/auth.services'\nimport LoggedInNavBar from './LoggedInNavBar'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass Profile extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.services = new AuthServices()\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<img className='imgStyle profilePicStyle' src={this.props.userInSession.data.imgUrl} />\n\t\t\t\t\t</Row>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<p className='profileData profileDataStyle'>Username: {this.props.userInSession.data.username}</p>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<p className='profileData profileDataStyle'>Member since: {this.props.userInSession.data.created_at.slice(0, 10)}</p>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<article className='task-card'>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</article>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Profile\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom'\n\nimport '../App.css'\n\nconst Home = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className='profileHeader'>\n\t\t\t\t<h2 className='profileQuote'>\n\t\t\t\t\tFind the people with the skills <br></br> you need on SmallTask\n\t\t\t\t</h2>\n\t\t\t\t<Button className='homeMainButton'>\n\t\t\t\t\t<Link className='homeMainLink' to='/signup'>\n\t\t\t\t\t\tGet started\n\t\t\t\t\t</Link>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\nimport Services from '../services/task.services'\n\nimport axios from 'axios'\nclass OfferDetails extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { offer: null }\n\t\tthis.service = new Services()\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(this.props.match)\n\t\tthis.service\n\t\t\t.getOneOffer(this.props.match.params.id)\n\t\t\t.then(response => this.setState({ offer: response.data }))\n\t\t\t.catch(err => console.log('err', err))\n\t}\n\n\tredirectToTaskOffers = () => {\n\t\tconst { history } = this.props\n\t\tif (history) {\n\t\t\thistory.push('/assigned-tasks')\n\t\t}\n\t}\n\n\thandleOfferClick = () => {\n\t\tthis.service\n\t\t\t.deleteOffer(this.state.offer.taskid, this.state.offer.bidderid)\n\t\t\t.then(this.redirectToTaskOffers())\n\t\t\t.catch(err => console.log('Error', err))\n\t}\n\n\ttoogleModal = () => {\n\t\tconst changed = !this.state.showModal\n\t\tthis.setState({ showModal: changed })\n\t}\n\n\trender() {\n\t\treturn this.state.offer ? (\n\t\t\t<div className='container'>\n\t\t\t\t<article>\n\t\t\t\t\t{console.log(this.state.offer)}\n\t\t\t\t\t<h1>Review offer</h1>\n\t\t\t\t\t<h2>{this.state.offer.bidder.username}</h2>\n\t\t\t\t\t<p>OFFER: {this.state.offer.budget}</p>\n\t\t\t\t\t<p>DESCRIPTION: {this.state.offer.description}</p>\n\t\t\t\t</article>\n\n\t\t\t\t{/* <button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.service.deleteOffer(this.state.offer.taskid, this.state.offer.bidderid), this.redirectToTaskOffers()\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAccept Offer\n\t\t\t\t</button> */}\n\n\t\t\t\t<button onClick={() => this.handleOfferClick()} offerinfo={this.state.offer}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tAccept Offer{' '}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<p>Waiting for the offer~~~</p>\n\t\t)\n\t}\n}\n\nexport default OfferDetails\n","import React, { Component } from 'react'\nimport './App.css'\nimport { Switch, Route } from 'react-router-dom'\nimport AuthServices from './services/auth.services'\nimport Signup from './components/auth/SignUp'\nimport Login from './components/auth/Login'\nimport NavBar from './components/NavBar'\nimport TasksList from './components/TasksList'\nimport MyTaskList from './components/MyTaskList'\nimport MyOpenTasksList from './components/MyOpenTasksList'\nimport MyAssignedTasksList from './components/MyAssignedTasksList'\nimport AssignedTaskerList from './components/AssignedTaskerList'\nimport TaskDetail from './components/TaskDetail'\nimport TaskAssignedList from './components/TaskAsignedList'\nimport TaskForm from './components/TaskForm'\nimport Profile from './components/Profile'\nimport Home from './components/Home'\nimport OffersList from './components/OffersList'\nimport OfferDetails from './components/OfferDetails'\nimport style from 'bootstrap/dist/css/bootstrap.css'\nimport LoggedInNavBar from './components/LoggedInNavBar'\n// import MapPrueba from './components/MapPrueba'\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { loggedInUser: null }\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\tsetTheUser = user => {\n\t\tthis.setState({ loggedInUser: user })\n\t\tconsole.log('Un componente ha cambiado el usuario en App:', this.state.loggedInUser)\n\t}\n\n\tfetchUser = () => {\n\t\tif (this.state.loggedInUser === null) {\n\t\t\tthis.authServices\n\t\t\t\t.loggedin()\n\t\t\t\t.then(response => this.setState({ loggedInUser: response }))\n\t\t\t\t.catch(x => this.setState({ loggedInUser: false }))\n\t\t}\n\t}\n\n\tupdateTaskList = () => {\n\t\tthis.services\n\t\t\t.getTasks()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tupdateOfferList = () => {\n\t\tthis.services\n\t\t\t.getOffers()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\tthis.fetchUser()\n\n\t\t// this.state.loggedInUser && console.log(this.state.loggedInUser.data)\n\n\t\tif (!this.state.loggedInUser) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<NavBar setUser={this.setTheUser} userInSession={this.state.loggedInUser} />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/' exact component={Home} />\n\t\t\t\t\t\t<Route path='/signup' exact render={match => <Signup {...match} setUser={this.setTheUser} />} />\n\t\t\t\t\t\t<Route path='/login' exact render={match => <Login {...match} setUser={this.setTheUser} />} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<NavBar setUser={this.setTheUser} userInSession={this.state.loggedInUser} />\n\t\t\t\t\t<LoggedInNavBar />\n\t\t\t\t\t<div style={{ display: 'flex', width: '100vw' }}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path='/' exact component={Home} />\n\t\t\t\t\t\t\t<Route path='/profile' exact render={match => <Profile {...match} userInSession={this.state.loggedInUser} />} />\n\t\t\t\t\t\t\t<Route path='/my-tasks' exact render={() => <MyTaskList user={this.state.loggedInUser} />} />\n\t\t\t\t\t\t\t<Route path='/my-open-tasks' exact component={MyOpenTasksList} />\n\t\t\t\t\t\t\t<Route path='/my-assigned-tasks' exact component={MyAssignedTasksList} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath='/assigned-tasker'\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\trender={match => <AssignedTaskerList {...match} userInSession={this.state.loggedInUser} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path='/task/:id' exact render={match => <TaskDetail {...match} userInSession={this.state.loggedInUser} />} />\n\t\t\t\t\t\t\t<Route path='/how-it-works' />\n\t\t\t\t\t\t\t<Route path='/tasks' exact component={TasksList} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath='/postTask'\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\trender={match => <TaskForm {...match} setUser={this.setTheUser} userInSession={this.state.loggedInUser} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path='/task-offers' exact component={OffersList} />\n\t\t\t\t\t\t\t<Route path='/offer-details/:id' exact component={OfferDetails} />\n\t\t\t\t\t\t\t<Route path='/accept-offer/:taskid/:bidderid' exact component={OffersList} />\n\t\t\t\t\t\t\t<Route path='/assigned-tasks' exact render={match => <TaskAssignedList {...match}></TaskAssignedList>} />\n\n\t\t\t\t\t\t\t{/* <Route\n\t\t\t\t\t\t\t\tpath='/postOffer/'\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\trender={match => <OfferForm {...match} setUser={this.setTheUser} userInSession={this.state.loggedInUser} />}\n\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t<Route path='/signup' exact render={match => <Signup {...match} setUser={this.setTheUser} />} />\n\t\t\t\t\t\t\t<Route path='/login' exact render={match => <Login {...match} setUser={this.setTheUser} />} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/location-pin.df9ba8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.a4b07a41.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.6468634d.svg\";"],"sourceRoot":""}