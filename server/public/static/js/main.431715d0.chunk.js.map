{"version":3,"sources":["services/auth.services.js","components/auth/SignUp.js","components/auth/Login.js","components/NavBar.js","services/task.services.js","components/TaskCard.js","components/Map.js","components/TasksList.js","components/MyTaskCard.js","components/MyTaskList.js","components/OfferForm.js","components/OfferFormModal.js","components/TaskDetail.js","components/TaskAssignedCard.js","components/TaskAsignedList.js","components/TaskForm.js","components/Profile.js","components/Home.js","components/OfferCard.js","components/OffersList.js","components/OfferDetails.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","imageUrl","service","post","login","logout","loggedin","get","handleUpload","theFile","this","axios","create","baseURL","process","withCredentials","Signup","props","handleFileUpload","e","setState","state","file","target","files","handleInputChange","name","value","handleFormSubmit","preventDefault","uploadData","FormData","append","authServices","then","response","data","secure_url","x","theNewUser","setUser","history","push","catch","err","console","log","AuthServices","className","onSubmit","type","onChange","Component","Login","theLoggedUser","NavBar","saludo","userInSession","bg","Brand","href","Link","onClick","Text","getTasks","getMyTasks","getOneTask","id","getAssignedTasks","postTask","theNewTask","postOffer","theNewOffer","getOffers","deleteOffer","taskId","bidderId","getOneOffer","TaskCard","title","description","budget","_id","to","variant","size","block","MapContainer","componentDidMount","navigator","geolocation","getCurrentPosition","position","center","lat","coords","latitude","lng","longitude","displayMarkers","tasks","map","task","index","key","place","stores","style","width","onPlaceSelected","parseFloat","geometry","location","currentSearch","types","componentRestrictions","country","google","zoom","mapStyles","initialCenter","height","GoogleApiWrapper","apiKey","TasksList","updateList","services","handleModalOpen","showModal","handleModalClose","handleToastOpen","showToast","handleToastClose","MyTaskCard","updateMyList","length","OfferForm","handleChangeInput","updateOfferList","redirectToTarget","pathname","taskid","taskowner","bidderid","bidderusername","htmlFor","OfferFormModal","aria-labelledby","Header","closeButton","Title","Body","TaskDetail","toogleModal","changed","match","params","date","creator","status","smShow","show","onHide","TaskAssignedCard","offerinfo","TasksAssignedList","TaskForm","redirectToMyTasks","updateTaskList","Profile","createdAt","Home","OfferCard","OffersList","offers","offer","OfferDetails","redirectToTaskOffers","handleOfferClick","bidder","App","setTheUser","user","loggedInUser","fetchUser","display","path","exact","component","render","MyTaskList","Boolean","window","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.431715d0.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\tconstructor() {\n\t\tthis.service = axios.create({\n\t\t\t// baseURL: 'http://localhost:5000/api/',\n\t\t\tbaseURL: `${process.env.REACT_APP_URL}`,\n\t\t\twithCredentials: true\n\t\t})\n\t}\n\n\tsignup = (username, password, imageUrl) => this.service.post('signup', { username, password, imageUrl })\n\tlogin = (username, password) => this.service.post('login', { username, password })\n\tlogout = () => this.service.post('logout')\n\tloggedin = () => this.service.get('loggedin')\n\thandleUpload = theFile => this.service.post('/upload', theFile)\n}\n","import React, { Component } from 'react'\nimport AuthServices from '../../services/auth.services'\n\nclass Signup extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\timageUrl: ''\n\t\t}\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\t//Cambia la imagen en el state dinamicamente\n\thandleFileUpload = e => {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tfile: e.target.files[0]\n\t\t})\n\t}\n\n\thandleInputChange = e => {\n\t\tconst { name, value, imageUrl } = e.target\n\t\tthis.setState({ [name]: value })\n\t}\n\n\thandleFormSubmit = e => {\n\t\te.preventDefault()\n\t\tconst { username, password, imageUrl } = this.state\n\n\t\t//Subida de imagen\n\t\tconst uploadData = new FormData()\n\n\t\tuploadData.append('imageUrl', this.state.file)\n\n\t\tthis.authServices\n\t\t\t.handleUpload(uploadData)\n\t\t\t.then(response => this.setState({ imageUrl: response.data.secure_url }))\n\t\t\t.then(x => {\n\t\t\t\t//Una vez subida la imagen enviamos el usuario al back y limpiamos el form y redireccionamos a index.\n\t\t\t\tthis.authServices.signup(username, password, imageUrl).then(theNewUser => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tusername: '',\n\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\timageUrl: ''\n\t\t\t\t\t})\n\t\t\t\t\tthis.props.setUser(theNewUser)\n\t\t\t\t\tthis.props.history.push('/')\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t\t//console.log(err.response.data.message))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<h1>Join Us</h1>\n\t\t\t\t<form onSubmit={this.handleFormSubmit}>\n\t\t\t\t\tUsername: <input name='username' type='text' value={this.state.username} onChange={this.handleInputChange} /> <br />\n\t\t\t\t\tPassword: <input name='password' type='password' value={this.state.password} onChange={this.handleInputChange} /> <br />\n\t\t\t\t\tImage: <input name='imageUrl' type='file' onChange={this.handleFileUpload} />\n\t\t\t\t\t<br />\n\t\t\t\t\t<input type='submit' value='Join SmallTask' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Signup\n","import React, { Component } from 'react'\nimport AuthServices from '../../services/auth.services'\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: ''\n\t\t}\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\thandleInputChange = e => {\n\t\tconst { name, value } = e.target\n\t\tthis.setState({ [name]: value })\n\t}\n\n\thandleFormSubmit = e => {\n\t\te.preventDefault()\n\t\tconst { username, password } = this.state\n\t\tthis.authServices\n\t\t\t.login(username, password)\n\t\t\t.then(theLoggedUser => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: ''\n\t\t\t\t})\n\t\t\t\tthis.props.setUser(theLoggedUser)\n\t\t\t\tthis.props.history.push('/')\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t\t//err => console.log(err.response.data.message))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<h1>Log in</h1>\n\t\t\t\t<form onSubmit={this.handleFormSubmit}>\n\t\t\t\t\tUsername: <input name='username' type='text' value={this.state.username} onChange={this.handleInputChange} /> <br />\n\t\t\t\t\tPassword: <input name='password' type='password' value={this.state.password} onChange={this.handleInputChange} /> <br />\n\t\t\t\t\t<input type='submit' value='Log in' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport AuthServices from '../services/auth.services'\nimport style from 'bootstrap/dist/css/bootstrap.css'\n\nclass NavBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\t// toggleMenu = () => document.querySelector('.menu').classList.toggle('abierto')\n\n\tlogout = () => {\n\t\tthis.authServices\n\t\t\t.logout()\n\t\t\t.then(x => {\n\t\t\t\tthis.props.setUser(null)\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\tconst saludo = this.props.userInSession ? this.props.userInSession.data.username : 'invitado'\n\n\t\tif (this.props.userInSession) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{/* <div className='toggle-menu' onClick={this.toggleMenu}>\n\t\t\t\t\t\t&equiv;{' '}\n\t\t\t\t\t</div> */}\n\t\t\t\t\t{/* <header className='menu'> */}\n\t\t\t\t\t{\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Navbar className='navstyle' bg='transparent'>\n\t\t\t\t\t\t\t\t<Navbar.Brand href='/'>SmallTask</Navbar.Brand>\n\t\t\t\t\t\t\t\t<Nav className='navbarcolor'>\n\t\t\t\t\t\t\t\t\t<Nav.Link href='/profile'>Profile</Nav.Link>\n\t\t\t\t\t\t\t\t\t<Nav.Link href='/tasks'>Browse tasks</Nav.Link>\n\t\t\t\t\t\t\t\t\t<Nav.Link href='/my-tasks'>My tasks</Nav.Link>\n\t\t\t\t\t\t\t\t\t<Nav.Link href='/postTask'>New Task</Nav.Link>\n\t\t\t\t\t\t\t\t\t<Nav.Link onClick={this.logout}>Logout</Nav.Link>\n\n\t\t\t\t\t\t\t\t\t<Navbar.Text>Signed in as: {saludo}</Navbar.Text>\n\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t</Navbar>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/* </header> */}\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{/* <div className='toggle-menu' onClick={this.toggleMenu}>\n\t\t\t\t\t\t&equiv;{' '}\n\t\t\t\t\t</div> */}\n\t\t\t\t\t{/* <header className='menu'> */}\n\t\t\t\t\t{/* <Nav>\n\t\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t\t<Nav.Link href='/'>Inicio</Nav.Link>\n\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t\t<Nav.Link href='/signup'>Registro</Nav.Link>\n\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t\t<Nav.Link href='/login'>Inicio de sesión</Nav.Link>\n\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t\t<Nav.Link href='/tasks'>Browse tasks</Nav.Link>\n\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t\t<Nav.Link href='/how-it-works'>How it works</Nav.Link>\n\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t<Nav.Item>Bienvenid@, {saludo}</Nav.Item>\n\t\t\t\t\t\t</Nav> */}\n\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Navbar bg='transparent'>\n\t\t\t\t\t\t\t<Navbar.Brand href='/'>SmallTask</Navbar.Brand>\n\t\t\t\t\t\t\t<Nav className='navbarcolor'>\n\t\t\t\t\t\t\t\t<Nav.Link href='/'>Inicio</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href='/signup'>Registro</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href='/login'>Inicio de sesión</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href='/tasks'>Browse tasks</Nav.Link>\n\t\t\t\t\t\t\t\t<Nav.Link href='/how-it-works'>How it works</Nav.Link>\n\t\t\t\t\t\t\t\t<Navbar.Text>Bienvenid@: {saludo}</Navbar.Text>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Navbar>\n\t\t\t\t\t</>\n\t\t\t\t\t<h1>SmallTask App</h1>\n\t\t\t\t\t{/* </header> */}\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\nexport default NavBar\n","import axios from 'axios'\n\nexport default class Services {\n\tconstructor() {\n\t\tthis.service = axios.create({\n\t\t\t// baseURL: 'http://localhost:5000/api/'\n\t\t\tbaseURL: `${process.env.REACT_APP_URL}`,\n\t\t\twithCredentials: true\n\t\t})\n\t}\n\n\tgetTasks = () => this.service.get('tasks')\n\tgetMyTasks = () => this.service.get('my-tasks')\n\tgetOneTask = id => this.service.get(`task/${id}`)\n\tgetAssignedTasks = () => this.service.get('assigned-tasks')\n\tpostTask = theNewTask => this.service.post(`postTask`, theNewTask)\n\tpostOffer = theNewOffer => this.service.post(`postOffer`, theNewOffer)\n\tgetOffers = () => this.service.get('task-offers')\n\tdeleteOffer = (taskId, bidderId) => this.service.post(`accept-offer`, { taskId, bidderId })\n\tgetOneOffer = id => this.service.get(`offer-details/${id}`)\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\n\nconst TaskCard = ({ title, description, budget, _id }) => {\n\treturn (\n\t\t<div className='col-md-3'>\n\t\t\t<article className='task-card'>\n\t\t\t\t<h4>{title}</h4>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<p>{budget}</p>\n\n\t\t\t\t<Link to={`/task/${_id}`}>\n\t\t\t\t\t<Button variant='dark' size='sm' block>\n\t\t\t\t\t\tDetails\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t\t<hr />\n\t\t\t</article>\n\t\t</div>\n\t)\n}\n\nexport default TaskCard\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\nimport GoogleMapReact from 'google-maps-react'\nimport Autocomplete from 'react-google-autocomplete'\n\nclass MapContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tstores: [\n\t\t\t\t{ lat: 40.3922718, lng: -3.6985561999999996 }\n\t\t\t\t// { lat: 47.359423, lng: -122.021071 },\n\t\t\t\t// { lat: 47.2052192687988, lng: -121.988426208496 },\n\t\t\t\t// { lat: 47.6307081, lng: -122.1434325 },\n\t\t\t\t// { lat: 47.3084488, lng: -122.2140121 },\n\t\t\t\t// { lat: 47.5524695, lng: -122.0425407 }\n\t\t\t]\n\t\t}\n\t}\n\n\tcomponentDidMount = () => {\n\t\t//findAll y markers.\n\t\t// set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\n\n\t\t// Enable or disable logs. Its optional.\n\n\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\tthis.setState({ center: { lat: position.coords.latitude, lng: position.coords.longitude } })\n\t\t})\n\t}\n\n\tdisplayMarkers = tasks => {\n\t\treturn tasks.map((task, index) => {\n\t\t\tconsole.log(task)\n\t\t\treturn (\n\t\t\t\t<Marker\n\t\t\t\t\tkey={index}\n\t\t\t\t\tid={index}\n\t\t\t\t\tposition={{\n\t\t\t\t\t\tlat: task.place.latitude,\n\t\t\t\t\t\tlng: task.place.longitude\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => console.log('You clicked me!')}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\n\trender() {\n\t\treturn this.state.center ? (\n\t\t\t<>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tstyle={{ width: '90%' }}\n\t\t\t\t\tonPlaceSelected={place => {\n\t\t\t\t\t\tconsole.log(parseFloat(place.geometry.location.lat()))\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcurrentSearch: {\n\t\t\t\t\t\t\t\tlat: parseFloat(place.geometry.location.lat()),\n\t\t\t\t\t\t\t\tlng: parseFloat(place.geometry.location.lng())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\ttypes={['address']}\n\t\t\t\t\tcomponentRestrictions={{ country: 'es' }}\n\t\t\t\t/>\n\t\t\t\t<GoogleMapReact google={this.props.google} zoom={8} style={mapStyles} initialCenter={this.state.center}>\n\t\t\t\t\t{this.displayMarkers(this.props.tasks)}\n\t\t\t\t</GoogleMapReact>\n\t\t\t</>\n\t\t) : (\n\t\t\t<p>Waiting for location...</p>\n\t\t)\n\t}\n}\n\nconst mapStyles = {\n\twidth: '50%',\n\theight: '100%'\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: `${process.env.REACT_APP_APPKEY}`\n\t//'AIzaSyDOuDALvzBrOz-Y-iQxy8lPZKvl8yw9ZX4'\n})(MapContainer)\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport TaskCard from './TaskCard'\nimport GoogleApiWrapper from './Map'\n\nclass TasksList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateList()\n\n\tupdateList = () => {\n\t\tthis.services\n\t\t\t.getTasks()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\thandleModalOpen = () => this.setState({ showModal: true })\n\thandleModalClose = () => this.setState({ showModal: false })\n\thandleToastOpen = () => this.setState({ showToast: true })\n\thandleToastClose = () => this.setState({ showToast: false })\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1>Listado de tasks</h1>\n\n\t\t\t\t{this.props.userInSession}\n\n\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t<TaskCard key={task._id} {...task} />\n\t\t\t\t))}\n\n\t\t\t\t{/* <div className='row task-list'>\n\t\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t\t<TaskCard key={task._id} {...task} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div> */}\n\t\t\t\t<GoogleApiWrapper tasks={this.state.tasks} />\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default TasksList\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\n\nconst MyTaskCard = ({ title, description, budget, _id }) => {\n\treturn (\n\t\t<div className='col-md-3'>\n\t\t\t<article className='task-card'>\n\t\t\t\t<h4>{title}</h4>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<p>{budget}</p>\n\n\t\t\t\t<Link to={`/task-offers`}>\n\t\t\t\t\t<Button variant='dark' size='sm' block>\n\t\t\t\t\t\tSee Offers\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t\t<hr />\n\t\t\t</article>\n\t\t</div>\n\t)\n}\n\nexport default MyTaskCard\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport MyTaskCard from './MyTaskCard'\nimport { Link } from 'react-router-dom'\n\nclass TasksList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateMyList()\n\n\tupdateMyList = () => {\n\t\tthis.services\n\t\t\t.getMyTasks()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\thandleModalOpen = () => this.setState({ showModal: true })\n\thandleModalClose = () => this.setState({ showModal: false })\n\thandleToastOpen = () => this.setState({ showToast: true })\n\thandleToastClose = () => this.setState({ showToast: false })\n\n\trender() {\n\t\tif (this.state.tasks.length === 0) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h3>Looks like you haven’t posted a task. How about posting one now?</h3>\n\t\t\t\t\t<Link to='/postTask'>Post a task</Link>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{/* <div className='container'> */}\n\t\t\t\t\t<h1>My tasks</h1>\n\t\t\t\t\t{/* \n\t\t\t\t\t\t<div className='row task-list'> */}\n\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t<MyTaskCard key={task._id} {...task} />\n\t\t\t\t\t))}\n\t\t\t\t\t{/* </div> */}\n\t\t\t\t\t{/* </div> */}\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default TasksList\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Services from '../services/task.services'\n\nclass OfferForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttaskid: this.props.taskid,\n\t\t\ttaskowner: this.props.taskowner,\n\t\t\tbidderid: this.props.userInSession.data._id,\n\t\t\tbidderusername: this.props.userInSession.data.username,\n\t\t\tdescription: '',\n\t\t\tbudget: ''\n\t\t}\n\t\tthis.service = new Services()\n\t}\n\n\thandleChangeInput = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value })\n\t}\n\n\thandleFormSubmit = e => {\n\t\te.preventDefault()\n\t\tthis.service\n\t\t\t.postOffer(this.state)\n\t\t\t.then(x => {\n\t\t\t\tthis.props.updateOfferList()\n\t\t\t})\n\t\t\t.catch(err => console.log('error', err))\n\t}\n\n\tredirectToTarget = () => {\n\t\treturn <Redirect to={{ pathname: '/' }} />\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/* <h4>Make an offer</h4> */}\n\n\t\t\t\t<hr />\n\n\t\t\t\t<form onSubmit={this.handleFormSubmit}>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-nombre'>Your offer:</label>\n\t\t\t\t\t\t<input name='budget' type='number' className='form-control' id='input-budget' onChange={this.handleChangeInput} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-description'>Your message:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\tid='input-descripcion'\n\t\t\t\t\t\t\tonChange={this.handleChangeInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type='submit' className='btn btn-dark btn-sm' onClick={() => this.redirectToTarget()}>\n\t\t\t\t\t\tCrear\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default OfferForm\n","import React, { Component } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport OfferForm from './OfferForm'\nclass OfferFormModal extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Modal {...this.props} size='small' aria-labelledby='example-modal-sizes-title-sm'>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title id='example-modal-sizes-title-sm'>Make an offer</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<OfferForm\n\t\t\t\t\t\tsetUser={this.props.setUser}\n\t\t\t\t\t\tuserInSession={this.props.userInSession}\n\t\t\t\t\t\ttaskowner={this.props.taskowner}\n\t\t\t\t\t\ttaskid={this.props.taskid}\n\t\t\t\t\t/>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\nexport default OfferFormModal\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\nimport Services from '../services/task.services'\nimport OfferFormModal from './OfferFormModal'\n\n// import OfferForm from './OfferForm'\n\nclass TaskDetail extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { task: {} }\n\t\tthis.service = new Services()\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.service\n\t\t\t.getOneTask(this.props.match.params.id)\n\t\t\t.then(response => this.setState({ task: response.data }))\n\t\t\t.catch(err => console.log('err', err))\n\t}\n\n\ttoogleModal = () => {\n\t\tconst changed = !this.state.showModal\n\t\tthis.setState({ showModal: changed })\n\t}\n\n\trender() {\n\t\tlet smClose = () => this.setState({ smShow: false })\n\t\t// let lgClose = () => this.setState({ lgShow: false })\n\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<article className='coaster-detail'>\n\t\t\t\t\t<div className='row justify-content-center'>\n\t\t\t\t\t\t<div className='col-md-6'>\n\t\t\t\t\t\t\t<h1>{this.state.task.title}</h1>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Details:</strong> {this.state.task.description}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<small>Task budget:</small> {this.state.task.budget} | Due date: {this.state.task.date}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>Posted by: {this.state.task.creator && this.state.task.creator.username}</p>\n\t\t\t\t\t\t\t<small>Status: {this.state.task.status}</small>\n\t\t\t\t\t\t\t<Link className='btn btn-big btn-dark' to='/tasks'>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Button onClick={() => this.setState({ smShow: true })} variant='dark' size='sm' block>\n\t\t\t\t\t\t\t\tMake an offer\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t{console.log(this.props.userInSession)}\n\t\t\t\t\t\t\t{this.state.task.creator && (\n\t\t\t\t\t\t\t\t// <OfferForm\n\n\t\t\t\t\t\t\t\t// \tuserInSession={this.props.userInSession}\n\t\t\t\t\t\t\t\t// \ttaskowner={this.state.task.creator.username}\n\t\t\t\t\t\t\t\t// \ttaskid={this.state.task._id}\n\t\t\t\t\t\t\t\t// />\n\n\t\t\t\t\t\t\t\t<OfferFormModal\n\t\t\t\t\t\t\t\t\tshow={this.state.smShow}\n\t\t\t\t\t\t\t\t\tonHide={smClose}\n\t\t\t\t\t\t\t\t\tsetUser={this.props.setUser}\n\t\t\t\t\t\t\t\t\tuserInSession={this.props.userInSession}\n\t\t\t\t\t\t\t\t\ttaskowner={this.state.task.creator.username}\n\t\t\t\t\t\t\t\t\ttaskid={this.state.task._id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TaskDetail\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\n\nconst TaskAssignedCard = ({ bidderusername, description, budget, _id, status, offerinfo }) => {\n\tconsole.log(_id)\n\treturn (\n\t\t<div className='col-md-3'>\n\t\t\t<article className='task-card'>\n\t\t\t\t<p>Posted by: {bidderusername}</p>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<p>TASK PRICE: {budget}</p>\n\n\t\t\t\t<Button>{status}</Button>\n\n\t\t\t\t<Link to={`/tasks`}>Back</Link>\n\n\t\t\t\t<hr />\n\t\t\t</article>\n\t\t</div>\n\t)\n}\n\nexport default TaskAssignedCard\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\nimport TaskAssignedCard from './TaskAssignedCard'\n\nclass TasksAssignedList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { tasks: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateList()\n\n\tupdateList = () => {\n\t\tthis.services\n\t\t\t.getAssignedTasks()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\thandleModalOpen = () => this.setState({ showModal: true })\n\thandleModalClose = () => this.setState({ showModal: false })\n\thandleToastOpen = () => this.setState({ showToast: true })\n\thandleToastClose = () => this.setState({ showToast: false })\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1>Listado de tasks</h1>\n\n\t\t\t\t{this.props.userInSession}\n\n\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t<TaskAssignedCard key={task._id} {...task} />\n\t\t\t\t))}\n\n\t\t\t\t{/* <div className='row task-list'>\n\t\t\t\t\t\t{this.state.tasks.map(task => (\n\t\t\t\t\t\t\t<TaskCard key={task._id} {...task} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div> */}\n\t\t\t</>\n\t\t)\n\t}\n}\nexport default TasksAssignedList\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\nimport Autocomplete from 'react-google-autocomplete'\nimport Services from '../services/task.services'\n\nclass TaskForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcreator: '',\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t\tbudget: '',\n\t\t\tdate: '',\n\t\t\tstatus: 'OPEN',\n\t\t\tlat: '',\n\t\t\tlng: ''\n\t\t}\n\t\tthis.service = new Services()\n\t}\n\n\thandleChangeInput = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value, creator: this.props.userInSession.data._id })\n\t\tconsole.log(this.props.userInSession)\n\t}\n\n\tredirectToMyTasks = () => {\n\t\tconst { history } = this.props\n\t\tif (history) history.push('/my-tasks')\n\t}\n\n\thandleFormSubmit = e => {\n\t\te.preventDefault()\n\t\tthis.service\n\t\t\t.postTask(this.state)\n\t\t\t.then(x => {\n\t\t\t\tthis.redirectToMyTasks()\n\t\t\t\tthis.props.updateTaskList()\n\t\t\t})\n\t\t\t.catch(err => console.log('error', err))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h4>What do you need done?</h4>\n\n\t\t\t\t<hr />\n\n\t\t\t\t<form onSubmit={this.handleFormSubmit}>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-nombre'>Title of your task</label>\n\t\t\t\t\t\t<input name='title' type='text' className='form-control' id='input-nombre' onChange={this.handleChangeInput} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-description'>Details</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\tid='input-descripcion'\n\t\t\t\t\t\t\tonChange={this.handleChangeInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-budget'>What is your budget?</label>\n\t\t\t\t\t\t<input name='budget' type='number' className='form-control' id='input-budget' onChange={this.handleChangeInput} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-inv'>When do you need it done?</label>\n\t\t\t\t\t\t<input name='date' type='date' className='form-control' id='input-date' onChange={this.handleChangeInput} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<label htmlFor='input-img'>Where do you need it done?</label>\n\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\tstyle={{ width: '90%' }}\n\t\t\t\t\t\t\tonPlaceSelected={place => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tplace: {\n\t\t\t\t\t\t\t\t\t\tlatitude: parseFloat(place.geometry.location.lat()),\n\t\t\t\t\t\t\t\t\t\tlongitude: parseFloat(place.geometry.location.lng())\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttypes={['address']}\n\t\t\t\t\t\t\tcomponentRestrictions={{ country: 'es' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type='submit' className='btn btn-dark btn-sm'>\n\t\t\t\t\t\tCrear\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button className='btn btn-dark btn-sm' onClick={this.redirectToMyTasks}>\n\t\t\t\t\t\tCerrar\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: 'AIzaSyDOuDALvzBrOz-Y-iQxy8lPZKvl8yw9ZX4'\n})(TaskForm)\n","import React, { Component } from 'react'\nimport AuthServices from '../services/auth.services'\n\nclass Profile extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.services = new AuthServices()\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<header className='profileHeader'>\n\t\t\t\t\t<h1>HOLA VALE</h1>\n\t\t\t\t</header>\n\t\t\t\t<div className='col-md-3'>\n\t\t\t\t\t<h3>{this.props.userInSession.data.username}</h3>\n\t\t\t\t\t<h2>Member since: {this.props.userInSession.data.createdAt}</h2>\n\t\t\t\t\t<article className='task-card'>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</article>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Profile\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\n\nimport '../App.css'\n\nconst Home = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className='profileHeader'>\n\t\t\t\t<h2 className='profileQuote'>\n\t\t\t\t\tFind the people with the skills <br></br> you need on SmallTask\n\t\t\t\t</h2>\n\t\t\t\t<Button className='homeMainButton' to='/signup'>\n\t\t\t\t\tGet started\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\n\nconst OfferCard = ({ bidderusername, description, budget, _id }) => {\n\tconsole.log(_id)\n\treturn (\n\t\t<div className='col-md-3'>\n\t\t\t<article className='task-card'>\n\t\t\t\t<p>Posted by: {bidderusername}</p>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<p>{budget}</p>\n\n\t\t\t\t<Link to={`/offer-details/${_id}`}>See offer</Link>\n\n\t\t\t\t<hr />\n\t\t\t</article>\n\t\t</div>\n\t)\n}\n\nexport default OfferCard\n","import React, { Component } from 'react'\nimport Services from '../services/task.services'\n\nimport OfferCard from './OfferCard'\n\nclass OffersList extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { offers: [] } // showModal: false, showToast: false }\n\t\tthis.services = new Services()\n\t}\n\n\tcomponentDidMount = () => this.updateList()\n\n\tupdateList = () => {\n\t\tthis.services\n\t\t\t.getOffers()\n\t\t\t.then(response => this.setState({ offers: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\thandleModalOpen = () => this.setState({ showModal: true })\n\thandleModalClose = () => this.setState({ showModal: false })\n\thandleToastOpen = () => this.setState({ showToast: true })\n\thandleToastClose = () => this.setState({ showToast: false })\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<h1>Listado de offers</h1>\n\n\t\t\t\t\t{this.props.userInSession}\n\n\t\t\t\t\t<div className='row task-list'>\n\t\t\t\t\t\t{this.state.offers.map(offer => (\n\t\t\t\t\t\t\t<OfferCard key={offer._id} {...offer} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default OffersList\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\nimport Services from '../services/task.services'\n\nimport axios from 'axios'\nclass OfferDetails extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { offer: null }\n\t\tthis.service = new Services()\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(this.props.match)\n\t\tthis.service\n\t\t\t.getOneOffer(this.props.match.params.id)\n\t\t\t.then(response => this.setState({ offer: response.data }))\n\t\t\t.catch(err => console.log('err', err))\n\t}\n\n\tredirectToTaskOffers = () => {\n\t\tconst { history } = this.props\n\t\tif (history) {\n\t\t\thistory.push('/assigned-tasks')\n\t\t}\n\t}\n\n\thandleOfferClick = () => {\n\t\tthis.service\n\t\t\t.deleteOffer(this.state.offer.taskid, this.state.offer.bidderid)\n\t\t\t.then(this.redirectToTaskOffers())\n\t\t\t.catch(err => console.log('Error', err))\n\t}\n\n\ttoogleModal = () => {\n\t\tconst changed = !this.state.showModal\n\t\tthis.setState({ showModal: changed })\n\t}\n\n\trender() {\n\t\treturn this.state.offer ? (\n\t\t\t<div className='container'>\n\t\t\t\t<article>\n\t\t\t\t\t{console.log(this.state.offer)}\n\t\t\t\t\t<h1>Review offer</h1>\n\t\t\t\t\t<h2>{this.state.offer.bidder.username}</h2>\n\t\t\t\t\t<p>OFFER: {this.state.offer.budget}</p>\n\t\t\t\t\t<p>DESCRIPTION: {this.state.offer.description}</p>\n\t\t\t\t</article>\n\n\t\t\t\t{/* <button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.service.deleteOffer(this.state.offer.taskid, this.state.offer.bidderid), this.redirectToTaskOffers()\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAccept Offer\n\t\t\t\t</button> */}\n\n\t\t\t\t<button onClick={this.handleOfferClick()} offerinfo={this.state.offer}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tAccept Offer{' '}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<p>Waiting for the offer~~~</p>\n\t\t)\n\t}\n}\n\nexport default OfferDetails\n","import React, { Component } from 'react'\nimport './App.css'\nimport { Switch, Route } from 'react-router-dom'\nimport AuthServices from './services/auth.services'\nimport Signup from './components/auth/SignUp'\nimport Login from './components/auth/Login'\nimport NavBar from './components/NavBar'\n\nimport TasksList from './components/TasksList'\nimport MyTaskList from './components/MyTaskList'\nimport TaskDetail from './components/TaskDetail'\nimport TaskAssignedList from './components/TaskAsignedList'\nimport TaskForm from './components/TaskForm'\nimport Profile from './components/Profile'\nimport Home from './components/Home'\nimport OffersList from './components/OffersList'\nimport OfferDetails from './components/OfferDetails'\nimport style from 'bootstrap/dist/css/bootstrap.css'\n// import MapPrueba from './components/MapPrueba'\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { loggedInUser: null }\n\t\tthis.authServices = new AuthServices()\n\t}\n\n\tsetTheUser = user => {\n\t\tthis.setState({ loggedInUser: user })\n\t\tconsole.log('Un componente ha cambiado el usuario en App:', this.state.loggedInUser)\n\t}\n\n\tfetchUser = () => {\n\t\tif (this.state.loggedInUser === null) {\n\t\t\tthis.authServices\n\t\t\t\t.loggedin()\n\t\t\t\t.then(response => this.setState({ loggedInUser: response }))\n\t\t\t\t.catch(x => this.setState({ loggedInUser: false }))\n\t\t}\n\t}\n\n\tupdateTaskList = () => {\n\t\tthis.services\n\t\t\t.getTasks()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tupdateOfferList = () => {\n\t\tthis.services\n\t\t\t.getOffers()\n\t\t\t.then(response => this.setState({ tasks: response.data }))\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\tthis.fetchUser()\n\n\t\t// this.state.loggedInUser && console.log(this.state.loggedInUser.data)\n\n\t\tif (!this.state.loggedInUser) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<NavBar setUser={this.setTheUser} userInSession={this.state.loggedInUser} />\n\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/' exact component={Home} />\n\t\t\t\t\t\t<Route path='/signup' exact render={match => <Signup {...match} setUser={this.setTheUser} />} />\n\t\t\t\t\t\t<Route path='/login' exact render={match => <Login {...match} setUser={this.setTheUser} />} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<NavBar setUser={this.setTheUser} userInSession={this.state.loggedInUser} />\n\t\t\t\t\t<div style={{ display: 'flex', width: '100vw' }}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path='/' exact component={Home} />\n\t\t\t\t\t\t\t<Route path='/profile' exact render={match => <Profile {...match} userInSession={this.state.loggedInUser} />} />\n\t\t\t\t\t\t\t<Route path='/my-tasks' exact component={MyTaskList} />\n\t\t\t\t\t\t\t<Route path='/task/:id' exact render={match => <TaskDetail {...match} userInSession={this.state.loggedInUser} />} />\n\t\t\t\t\t\t\t<Route path='/how-it-works' />\n\t\t\t\t\t\t\t<Route path='/tasks' exact component={TasksList} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath='/postTask'\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\trender={match => <TaskForm {...match} setUser={this.setTheUser} userInSession={this.state.loggedInUser} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path='/task-offers' exact component={OffersList} />\n\t\t\t\t\t\t\t<Route path='/offer-details/:id' exact component={OfferDetails} />\n\t\t\t\t\t\t\t<Route path='/accept-offer/:taskid/:bidderid' exact component={OffersList} />\n\t\t\t\t\t\t\t<Route path='/assigned-tasks' exact render={match => <TaskAssignedList {...match}></TaskAssignedList>} />\n\t\t\t\t\t\t\t{/* <Route\n\t\t\t\t\t\t\t\tpath='/postOffer/'\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\trender={match => <OfferForm {...match} setUser={this.setTheUser} userInSession={this.state.loggedInUser} />}\n\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t<Route path='/signup' exact render={match => <Signup {...match} setUser={this.setTheUser} />} />\n\t\t\t\t\t\t\t<Route path='/login' exact render={match => <Login {...match} setUser={this.setTheUser} />} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}